<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.cydeer</groupId>
        <artifactId>cydeer-pom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../cydeer-pom/pom.xml</relativePath>
    </parent>
    <artifactId>base-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>base-parent</name>
    <url>http://www.merlin4io.com</url>
    <properties>
        <maven.test.skip>true</maven.test.skip>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
         环境配置项：在工程目录 env 下的 ${xia.build.env}.conf 文件，规则定义五个环境：dev,int,qa,uat,prod
         -->
        <xia.build.env>dev</xia.build.env>
        <xia.build.libScope>compile</xia.build.libScope>
        <!--
         对于直接集成该pom的工程，路径为当前工程目录；对于间接继承（有自己的pom），路径为自己pom工程的根目录
         -->
        <xia.build.env.path>../${project.parent.artifactId}</xia.build.env.path>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.cydeer</groupId>
            <artifactId>cydeer-core</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <!--  Spring 配置  -->
        <dependency>
            <!--  spring-webmvc 已经依赖了 spring-web/spring-context  -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  dao: myBatis,c3p0  -->
        <dependency>
            <!--  https://github.com/mybatis/mybatis-3/releases  -->
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <!--  https://github.com/mybatis/spring/releases  -->
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  View: JSTL  -->
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>javax.servlet.jsp.jstl-api</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  commons 项目  -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <!--
             SpringMVC文件上传采用的是commons-fileupload实现，依赖commons-fileupload和commons-io项目
             -->
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  Cache扩展  -->
        <dependency>
            <groupId>com.whalin</groupId>
            <artifactId>Memcached-Java-Client</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  日志包SLF  -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  tools: httpClient,jackson,hessian  -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>net.spy</groupId>
            <artifactId>spymemcached</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <!--  mysql驱动包  -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.21</version>
            <scope>${xia.build.libScope}</scope>
            <!--  运行时用，测试编译时不用  -->
        </dependency>
        <!--  serverlet 依赖包  -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
            <!--  编译和测试有效，运行时无效，该包容器已提供  -->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.2</version>
            <scope>${xia.build.libScope}</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>${xia.build.libScope}</scope>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!--  WAR  -->
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <!--  warSourceDirectory 存在会冲掉 webResources 中的配置  -->
                        <warSourceDirectory>webapp</warSourceDirectory>
                        <failOnMissingWebXml>true</failOnMissingWebXml>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>war</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.5</version>
                    <configuration>
                        <finalName>${project.artifactId}</finalName>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <!--  绑定到package生命周期阶段上  -->
                            <goals>
                                <goal>single</goal>
                                <!--  只运行一次  -->
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <filters>
            <filter>${xia.build.env.path}/env/${xia.build.env}.conf</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/env/${xk.build.env}</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>conf/*</include>
                    <include>logback.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/env/${xk.build.env}</directory>
                <includes>
                    <include>conf/*</include>
                    <include>logback.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>conf/*</include>
                    <include>logback.xml</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
        </testResources>
    </build>
</project>